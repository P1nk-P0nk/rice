##########################################################
# Sway Config file
# Licensed under 3-clause BSD
##########################################################
#include /etc/sway/config.d/*

# Keyboard & touchpad config and background image
input "type:keyboard" {
	 xkb_layout "fr"
}

input "type:touchpad" { 
	tap enabled 
}

output * bg <background_path> fill

# Modifier key 
# Mod4 : Win/meta key
# Mod1 : alt key
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# add env vars about display so that I can screenshare
exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

# Don't forget to start your buddy polkit
exec --no-startup-id /usr/lib/polkit-kde-authentication-agent-1 &

exec --no-startup-id gnome-keyring-daemon -d

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

set $Locker swaylock -f -i "background_path"

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
#exec  xss-lock --transfer-sleep-lock -- $Locker
exec swayidle -w \
	lock 'exec $Locker' \
	before-sleep 'exec $Locker' \
	timeout 300 'exec $Locker'
#\
#	timeout 600 'swaymsg "output * dpms off"' \
#	resume 'swaymsg "output * dpms on"'

# Waybar, for a beautiful bar but with Wayland
exec waybar -c ~/.config/waybar/config

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec nm-applet --indicator

# wlsunset to replace redshift
exec wlsunset -l 47,6581 -L -2,7552

# enable notifications
exec mako

# enable auto screen layout switching
exec --no-startup-id kanshi &

# using grim/slurp for screenshots in wayland
bindsym Shift+Print exec  grim -g "$(slurp)" - | wl-copy
bindsym Print exec  grim ~/Images/$(date +%s).png
bindsym Ctrl+Print exec  grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" ~/Images/"$(date +%s)"_w.png

# i3lock to lock the screen
bindsym $mod+l exec  $Locker

# Start/show discord
#bindsym $mod+Ctrl+d exec  discord

# Use pactl to adjust volume in PulseAudio.
bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

# Use brightness keys
bindsym --locked XF86MonBrightnessUp exec xbacklight -inc 5
bindsym --locked XF86MonBrightnessDown exec xbacklight -dec 5

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)

set $menu tofi-run | xargs swaymsg exec --
bindsym $mod+d exec $menu

set $drun tofi-drun --drun-launch=true
bindsym $mod+Shift+d exec $drun
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec  i3-dmenu-desktop

# change focus
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"


# NOTE: Workspace switch and container moving 
# have been altered to match french keyboard layout

# switch to workspace
bindsym $mod+ampersand workspace number $ws1
bindsym $mod+eacute workspace number $ws2
bindsym $mod+quotedbl workspace number $ws3
bindsym $mod+apostrophe workspace number $ws4
bindsym $mod+parenleft workspace number $ws5
bindsym $mod+minus workspace number $ws6
bindsym $mod+egrave workspace number $ws7
bindsym $mod+underscore workspace number $ws8
bindsym $mod+ccedilla workspace number $ws9
bindsym $mod+agrave workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+ampersand move container to workspace number $ws1
bindsym $mod+Shift+eacute move container to workspace number $ws2
bindsym $mod+Shift+quotedbl move container to workspace number $ws3
bindsym $mod+Shift+apostrophe move container to workspace number $ws4
bindsym $mod+Shift+parenleft move container to workspace number $ws5
bindsym $mod+Shift+minus move container to workspace number $ws6
bindsym $mod+Shift+egrave move container to workspace number $ws7
bindsym $mod+Shift+underscore move container to workspace number $ws8
bindsym $mod+Shift+ccedilla move container to workspace number $ws9
bindsym $mod+Shift+agrave move container to workspace number $ws10

# Back and forth when pressing the same workspace keybind
workspace_auto_back_and_forth yes

# reload the configuration file
bindsym $mod+Shift+c reload
# restart sway inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit sway (logs you out of your X session)
#bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Set shut down, restart and locking features
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec $Locker, mode "default"
    bindsym e exec swaymsg exit, mode "default"
    bindsym s exec $Locker && systemctl suspend, mode "default"
    bindsym h exec $Locker && systemctl hibernate, mode "default"
    bindsym r exec systemctl reboot, mode "default"
    bindsym Shift+s exec  systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

bindsym $mod+Shift+e mode "$mode_system"

# i3-gaps configuration
gaps inner 5
gaps outer 0
smart_gaps on

for_window [class="^.*"] border pixel 1
default_border none

# Bindings for scratchpad
bindsym $mod+Shift+BackSpace [floating] move scratchpad
bindsym $mod+BackSpace [floating] scratchpad show

# Bindings for cycling on workspaces
bindsym $mod+Tab workspace next
bindsym $mod+Shift+Tab workspace prev

# Sway status bar swaybar
# can use bumblebee-status to fill it with something good looking
#bar {
#        status_command swaybar
#}

